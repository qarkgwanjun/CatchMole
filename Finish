#include <iostream>
#include <stdlib.h>
#include <Windows.h>
#include <Time.h>
#include <conio.h>
#define TRUE 1
using namespace std;

void gotoxy(int x, int y) // 콘솔 화면 커서 이동
{
	COORD pos = { x,y };
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);

}
void setcolor(int color, int bgcolor) //콘솔 화면 글자 색 변경
{
	color &= 0xf;
	bgcolor &= 0xf;

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), (bgcolor << 4) | color);
}
void KeepHole()
{
	int y = 10;
	int x = 0;
	for (int i = 0; i < 9; i++) {
		x += 20;
		gotoxy(x, y);
		cout << "(|      |)" << endl;
		if (x % 3 == 0) {
			y += 3;
			x = 0;
		}
	}

}
int MoveMole(int *Location)
{
	int rn1 = rand() % 3;
	int rn2 = rand() % 3 + 3;
	int c = 0;



	gotoxy(Location[rn1], Location[rn2]);
	cout << " |0 nn 0|" << endl;

	if (Location[rn1] == 20 && Location[rn2] == 9)
		c = 7;
	else if (Location[rn1] == 40 && Location[rn2] == 9)
		c = 8;
	else if (Location[rn1] == 60 && Location[rn2] == 9)
		c = 9;
	else if (Location[rn1] == 20 && Location[rn2] == 12)
		c = 4;
	else if (Location[rn1] == 40 && Location[rn2] == 12)
		c = 5;
	else if (Location[rn1] == 60 && Location[rn2] == 12)
		c = 6;
	else if (Location[rn1] == 20 && Location[rn2] == 15)
		c = 1;
	else if (Location[rn1] == 40 && Location[rn2] == 15)
		c = 2;
	else if (Location[rn1] == 60 && Location[rn2] == 15)
		c = 3;
	return c;
}
int* Location()
{
	// 입력받은 크기 만큼의 int의 배열을 만든다.
	void* ar1 = (int*)malloc(sizeof(int) * 6);
	int* ip1 = (int*)ar1;

	ip1[0] = 20;
	ip1[1] = 40;
	ip1[2] = 60;
	ip1[3] = 9;
	ip1[4] = 12;
	ip1[5] = 15;

	return ip1;
}
int MoleToCatch(int *a)
{
	int touch = 0;
	KeepHole();
	cin >> touch;
	if (touch == *a)
		return 11;
	else
		return 12;
}

int Score1(int *Score1, int* count, int* last)
{
	
	 
	if (*Score1 == 11)
	{
		*count += 50;
		*last +=50;
		gotoxy(40, 19);
		cout << "성공 : " << *count << "점";
				
	}
	if (*Score1 == 12)
	{
		*count -= 50;
		*last +=50;
		gotoxy(40, 19);
		cout << "실패 : " << *count << "점";		
	}
	
	if (*last == 500)
	{

		setcolor(10, 0);                //10 :초록

										//게임 시작 전 화면
		gotoxy(18, 3);
		cout << "┌────────────────────┐" << endl;
		gotoxy(18, 4);
		cout << "│                                        │" << endl;
		gotoxy(18, 5);
		cout << "│            두더지 잡기게임             │" << endl;
		gotoxy(18, 6);
		cout << "│                                        │" << endl;
		gotoxy(18, 7);
		cout << "│          게임이 종료되었습니다.        │" << endl;
		gotoxy(18, 8);
		cout << "│            플레이어 : "<<*count<< " 점"<<"           │" << endl;
		gotoxy(18, 9);
		cout << "│                                        │" << endl;
		gotoxy(18, 10);
		cout << "└────────────────────┘" << endl;

		_getch();
		system("cls");

	}

	return *last;
}

int main()
{
	
	int a = 0;
	/*int random = 0;
	int sec = 3;

	setcolor(10, 0);                //10 :초록

	//게임 시작 전 화면
	gotoxy(18, 3);
	cout << "┌────────────────────┐" << endl;
	gotoxy(18, 4);
	cout << "│                                        │" << endl;
	gotoxy(18, 5);
	cout << "│            두더지 잡기게임             │" << endl;
	gotoxy(18, 6);
	cout << "│                                        │" << endl;
	gotoxy(18, 7);
	cout << "│         아무키나 누르면 시작!          │" << endl;
	gotoxy(18, 8);
	cout << "│        게임 조작키 :  1~9 번키         │" << endl;
	gotoxy(18, 9);
	cout << "│                                        │" << endl;
	gotoxy(18, 10);
	cout << "└────────────────────┘" << endl;

	_getch();
	system("cls");
	//게임 대기 화면

	for (int i = 0; i < 3; i++) // 게임 5초 대기
	{
	setcolor(10, 0);                //10 :초록
	gotoxy(5, 5);
	cout << sec << "초후에 시작합니다" << endl;
	sec--;
	Sleep(1000);
	}
	system("cls");
	//게임 시작 화면
	sec = 60;
	*/
	srand((unsigned)time(NULL));
	int count = 0;
	int last = 0;
	while (1)
	{
		int* rn = Location();
		KeepHole();

		int IsMoleHead = MoveMole(rn);

		//MoleToCatch(&IsMoleHead);

		int Score = MoleToCatch(&IsMoleHead);		
		Score1(&Score,&count,&last);
	
		int Finish = Score1(&Score, &count, &last);
		if (Finish ==500)
		{
			break;
		}

		Sleep(1000);
		system("cls");
		free(rn);
	}
	return 0;
}
